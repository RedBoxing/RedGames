buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

group = 'fr.redboxing'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'codemc-snapshots'
        url = 'https://repo.codemc.io/repository/maven-snapshots'
    }
    maven {
        name = 'OnARandomBox'
        url = 'https://repo.onarandombox.com/content/groups/public/'
    }
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    compileOnly 'org.spigotmc:spigot:1.19-R0.1-SNAPSHOT'

    implementation 'org.ipvp:canvas:1.7.0-SNAPSHOT'
    implementation 'net.wesjd:anvilgui:1.5.3-SNAPSHOT'

    compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.1'
    compileOnly files('run/plugins/FastChunkPregenerator-2.0.6-SNAPSHOT.jar')
    compileOnly files('run/plugins/PhantomWorlds-2.0.3.jar')

    implementation(platform("com.intellectualsites.bom:bom-1.18.x:1.9"))
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core")
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    destinationDirectory.set(file("run/plugins"))
}

tasks.build.dependsOn tasks.shadowJar